//
class Matrix {
    field int row;
    field int col;
    field array data;
    
    constructor Matrix new(int height, int length, array datamatrix) {
        let row = height;
        let col = length;
        let data = datamatrix;
        return this;
    }
    
    function Matrix setmatrix(string name) {
        var int m;
        var int n;
        var Matrix matrix;
        var int i;
        var int j;
        var array mat;
        var array vec;
        do Output.printString("For ");
        do Output.printString(name);
        let m = Keyboard.readInt("Enter the number of rows of matrix: ");
        let n = Keyboard.readInt("Enter the number of columns of matrix: ");
        mat = array.new(m);
        vec = array.new(n);
        while (i<m) {
            while (j<n) {
                do Output.printString("Enter the value of ith row, jth column. i,j = ");
                do Output.printInt(i);
                do Output.printString(",");
                do Output.printInt(j);
                let vec[j] = Keyboard.readInt(":");
                let j = j+1;
            }
            let mat[i] = vec;
            let i = i+1;
            let j = 0;
        }
        let matrix = Matrix.new(m,n,mat);
        return matrix;
        }
    
    function Matrix matrixmult(Matrix mata, Matrix matb) {
        var Matrix result;
        var int i;   // i,j,k are all iteration variable
        var int j;
        var int k;
        var array mat;  // mat and vec are used to set the data of matrix.
        var array vec;
        if ( ~(mata.col = matb.row)) {
            do Output.printString("Invalid dimension!");
            return null;
        }
        let mat = array.new(mata.row);
        let vec = array.new(matb.col);
        while (i<mata.row) {
            while (j<matb.col) {
                while (k<mata.col) {
                    let vec[j] = mata.data[i][k] * matb.data[k][j];
                    let k = k + 1;
                }
                let j = j + 1;
                let k = 0;
            }
            let i = i + 1;
            let j = 0;
            let mat[i] = vec;
        let result = Matrix.new(m,p,mat);
        return result;
    }
}

    method void printMatrix(Matrix mat) {
        var int i;
        var int j;
        let i = 0;
        let j = 0;
        while (i<mat.row) {
            while (j<mat.col) {
                do Output.printInt(mat[i][j]);
                do Output.printString(" ");
                let j = j + 1;
            }
            do Output.println();
            let i = i + 1;
        }
    }
}