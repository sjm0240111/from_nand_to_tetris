function Screen.init 2
push constant 0
not
pop static 0
push constant 16384
pop static 1
push constant 16
call Array.new 1
pop static 2
push constant 0
pop local 0
push constant 1
pop local 1
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push static 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 1
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.clearScreen 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push local 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 0
push constant 0
return
function Screen.drawPixel 2
push argument 0
push constant 15
and
pop local 1
push argument 0
push constant 16
call Math.divide 2
push constant 32
push argument 1
call Math.multiply 2
add
pop local 0
push static 0
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push static 1
add
push local 0
push static 1
add
pop pointer 1
push that 0
push local 1
push static 2
add
pop pointer 1
push that 0
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push local 0
push static 1
add
push local 1
push static 2
add
pop pointer 1
push that 0
not
push local 0
push static 1
add
pop pointer 1
push that 0
and
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 0
return
function Screen.drawLine 7
push argument 2
push argument 0
sub
pop local 0
push constant 1
pop local 2
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
neg
pop local 0
push constant 1
neg
pop local 2
label IF_FALSE0
push argument 3
push argument 1
sub
pop local 1
push constant 1
pop local 3
push local 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
neg
pop local 1
push constant 1
neg
pop local 3
label IF_FALSE1
push constant 0
pop local 4
push constant 0
pop local 5
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push local 0
push local 1
sub
pop local 6
label WHILE_EXP0
push local 4
push local 0
lt
push local 5
push local 1
lt
or
not
if-goto WHILE_END0
push local 6
push constant 0
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 4
push constant 1
add
pop local 4
push local 6
push local 1
sub
pop local 6
push argument 0
push local 2
add
pop argument 0
goto IF_END2
label IF_FALSE2
push local 5
push constant 1
add
pop local 5
push local 6
push local 0
add
pop local 6
push argument 1
push local 3
add
pop argument 1
label IF_END2
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawRectangle 3
push argument 3
push argument 1
sub
pop local 1
push constant 1
pop local 2
push local 1
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
neg
pop local 1
push constant 1
neg
pop local 2
label IF_FALSE0
push constant 0
pop local 0
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push argument 1
push local 2
add
pop argument 1
push argument 0
push argument 1
push argument 2
push argument 1
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 2
push argument 2
neg
pop local 1
push argument 1
push argument 2
sub
pop argument 1
label WHILE_EXP0
push local 1
push argument 2
lt
not
if-goto WHILE_END0
push argument 2
push argument 2
call Math.multiply 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 0
push argument 0
push local 0
sub
push argument 1
push argument 0
push local 0
add
push argument 1
call Screen.drawLine 4
pop temp 0
push argument 1
push constant 1
add
pop argument 1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push constant 0
return
